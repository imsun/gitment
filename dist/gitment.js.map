{"version":3,"sources":["../src/gitment.js"],"names":["scope","extendRenderer","instance","renderer","container","targetContainer","render","theme","defaultTheme","e","state","firstChild","replaceChild","appendChild","Gitment","localStorage","getItem","token","setItem","oauthUri","redirect_uri","oauth","window","location","href","oauthParams","Object","assign","stringify","options","useTheme","id","title","document","link","desc","labels","perPage","maxCommentHeight","user","userInfo","accessToken","JSON","parse","fromCache","removeItem","error","meta","comments","undefined","reactions","commentReactions","currentPage","query","code","client_id","client_secret","search","replacedUrl","origin","pathname","hash","history","replaceState","isLoggingIn","post","then","data","access_token","update","catch","alert","createIssue","loadComments","renderers","keys","forEach","Promise","all","loadMeta","loadUserInfo","loadCommentReactions","loadReactions","text","mode","owner","repo","concat","body","resolve","getIssue","issue","comments_url","pageCount","Math","ceil","push","get","creator","issues","length","reject","page","per_page","logout","total_count","url","comentReactions","map","comment","index","reactionsArray","loginLink","number","content","reaction","heart","findIndex","login","delete","splice","patch","commentId","find","module","exports"],"mappings":";;;;AAAA;;AAEA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,QAAQ,aAAd;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,QAAlC,EAA4C;AAC1CD,WAASC,QAAT,IAAqB,UAACC,SAAD,EAAe;AAClC,QAAMC,kBAAkB,+BAAmBD,SAAnB,CAAxB;AACA,QAAME,SAASJ,SAASK,KAAT,CAAeJ,QAAf,KAA4BD,SAASM,YAAT,CAAsBL,QAAtB,CAA3C;;AAEA,uBAAQ,YAAM;AACZ,UAAMM,IAAIH,OAAOJ,SAASQ,KAAhB,EAAuBR,QAAvB,CAAV;AACA,UAAIG,gBAAgBM,UAApB,EAAgC;AAC9BN,wBAAgBO,YAAhB,CAA6BH,CAA7B,EAAgCJ,gBAAgBM,UAAhD;AACD,OAFD,MAEO;AACLN,wBAAgBQ,WAAhB,CAA4BJ,CAA5B;AACD;AACF,KAPD;;AASA,WAAOJ,eAAP;AACD,GAdD;AAeD;;IAEKS,O;;;wBACc;AAChB,aAAOC,aAAaC,OAAb,gCAAP;AACD,K;sBACeC,K,EAAO;AACrBF,mBAAaG,OAAb,iCAA0CD,KAA1C;AACD;;;wBAEe;AACd,UAAME,WAAW,0CAAjB;AACA,UAAMC,eAAe,KAAKC,KAAL,CAAWD,YAAX,IAA2BE,OAAOC,QAAP,CAAgBC,IAAhE;;AAEA,UAAMC,cAAcC,OAAOC,MAAP,CAAc;AAChC3B,oBADgC;AAEhCoB;AAFgC,OAAd,EAGjB,KAAKC,KAHY,CAApB;;AAKA,kBAAUF,QAAV,GAAqB,aAAMS,SAAN,CAAgBH,WAAhB,CAArB;AACD;;;AAED,qBAA0B;AAAA;;AAAA,QAAdI,OAAc,uEAAJ,EAAI;;AAAA;;AACxB,SAAKrB,YAAL;AACA,SAAKsB,QAAL;;AAEAJ,WAAOC,MAAP,CAAc,IAAd,EAAoB;AAClBI,UAAIT,OAAOC,QAAP,CAAgBC,IADF;AAElBQ,aAAOV,OAAOW,QAAP,CAAgBD,KAFL;AAGlBE,YAAMZ,OAAOC,QAAP,CAAgBC,IAHJ;AAIlBW,YAAM,EAJY;AAKlBC,cAAQ,EALU;AAMlB7B,8BANkB;AAOlBc,aAAO,EAPW;AAQlBgB,eAAS,EARS;AASlBC,wBAAkB;AATA,KAApB,EAUGT,OAVH;;AAYA,SAAKC,QAAL,CAAc,KAAKvB,KAAnB;;AAEA,QAAMgC,OAAO,EAAb;AACA,QAAI;AACF,UAAMC,WAAWzB,aAAaC,OAAb,wBAAjB;AACA,UAAI,KAAKyB,WAAL,IAAoBD,QAAxB,EAAkC;AAChCd,eAAOC,MAAP,CAAcY,IAAd,EAAoBG,KAAKC,KAAL,CAAWH,QAAX,CAApB,EAA0C;AACxCI,qBAAW;AAD6B,SAA1C;AAGD;AACF,KAPD,CAOE,OAAOnC,CAAP,EAAU;AACVM,mBAAa8B,UAAb;AACD;;AAED,SAAKnC,KAAL,GAAa,sBAAW;AACtB6B,gBADsB;AAEtBO,aAAO,IAFe;AAGtBC,YAAM,EAHgB;AAItBC,gBAAUC,SAJY;AAKtBC,iBAAW,EALW;AAMtBC,wBAAkB,EANI;AAOtBC,mBAAa;AAPS,KAAX,CAAb;;AAUA,QAAMC,QAAQ,aAAMV,KAAN,EAAd;AACA,QAAIU,MAAMC,IAAV,EAAgB;AAAA,mBACuB,KAAKjC,KAD5B;AAAA,UACNkC,SADM,UACNA,SADM;AAAA,UACKC,aADL,UACKA,aADL;;AAEd,UAAMF,OAAOD,MAAMC,IAAnB;AACA,aAAOD,MAAMC,IAAb;AACA,UAAMG,SAAS,aAAM7B,SAAN,CAAgByB,KAAhB,CAAf;AACA,UAAMK,mBAAiBpC,OAAOC,QAAP,CAAgBoC,MAAjC,GAA0CrC,OAAOC,QAAP,CAAgBqC,QAA1D,GAAqEH,MAArE,GAA8EnC,OAAOC,QAAP,CAAgBsC,IAApG;AACAC,cAAQC,YAAR,CAAqB,EAArB,EAAyB,EAAzB,EAA6BL,WAA7B;;AAEAhC,aAAOC,MAAP,CAAc,IAAd,EAAoB;AAClBI,YAAI2B,WADc;AAElBxB,cAAMwB;AAFY,OAApB,EAGG7B,OAHH;;AAKA,WAAKnB,KAAL,CAAW6B,IAAX,CAAgByB,WAAhB,GAA8B,IAA9B;AACA,kBAAKC,IAAL,CAAU,4BAAV,EAAwC;AACpCX,kBADoC;AAEpCC,4BAFoC;AAGpCC;AAHoC,OAAxC,EAIK,EAJL,EAKGU,IALH,CAKQ,gBAAQ;AACZ,cAAKzB,WAAL,GAAmB0B,KAAKC,YAAxB;AACA,cAAKC,MAAL;AACD,OARH,EASGC,KATH,CASS,aAAK;AACV,cAAK5D,KAAL,CAAW6B,IAAX,CAAgByB,WAAhB,GAA8B,KAA9B;AACAO,cAAM9D,CAAN;AACD,OAZH;AAaD,KA3BD,MA2BO;AACL,WAAK4D,MAAL;AACD;AACF;;;;2BAEM;AAAA;;AACL,aAAO,KAAKG,WAAL,GACJN,IADI,CACC;AAAA,eAAM,OAAKO,YAAL,EAAN;AAAA,OADD,EAEJP,IAFI,CAEC,oBAAY;AAChB,eAAKxD,KAAL,CAAWoC,KAAX,GAAmB,IAAnB;AACA,eAAOE,QAAP;AACD,OALI,CAAP;AAMD;;;+BAEoB;AAAA;;AAAA,UAAZzC,KAAY,uEAAJ,EAAI;;AACnB,WAAKA,KAAL,GAAaA,KAAb;;AAEA,UAAMmE,YAAYhD,OAAOiD,IAAP,CAAY,KAAKpE,KAAjB,CAAlB;AACAmE,gBAAUE,OAAV,CAAkB;AAAA,eAAY3E,uBAAqBE,QAArB,CAAZ;AAAA,OAAlB;AACD;;;6BAEQ;AAAA;;AACP,aAAO0E,QAAQC,GAAR,CAAY,CAAC,KAAKC,QAAL,EAAD,EAAkB,KAAKC,YAAL,EAAlB,CAAZ,EACJd,IADI,CACC;AAAA,eAAMW,QAAQC,GAAR,CAAY,CACtB,OAAKL,YAAL,GAAoBP,IAApB,CAAyB;AAAA,iBAAM,OAAKe,oBAAL,EAAN;AAAA,SAAzB,CADsB,EAEtB,OAAKC,aAAL,EAFsB,CAAZ,CAAN;AAAA,OADD,EAKJZ,KALI,CAKE;AAAA,eAAK,OAAK5D,KAAL,CAAWoC,KAAX,GAAmBrC,CAAxB;AAAA,OALF,CAAP;AAMD;;;6BAEQ0E,I,EAAM;AACb,aAAO,YAAKlB,IAAL,CAAU,WAAV,EAAuB;AAC5BkB,kBAD4B;AAE5BC,cAAM;AAFsB,OAAvB,CAAP;AAID;;;kCAEa;AAAA;;AAAA,UACJrD,EADI,GAC2C,IAD3C,CACJA,EADI;AAAA,UACAsD,KADA,GAC2C,IAD3C,CACAA,KADA;AAAA,UACOC,IADP,GAC2C,IAD3C,CACOA,IADP;AAAA,UACatD,KADb,GAC2C,IAD3C,CACaA,KADb;AAAA,UACoBE,IADpB,GAC2C,IAD3C,CACoBA,IADpB;AAAA,UAC0BC,IAD1B,GAC2C,IAD3C,CAC0BA,IAD1B;AAAA,UACgCC,MADhC,GAC2C,IAD3C,CACgCA,MADhC;;;AAGZ,aAAO,YAAK6B,IAAL,aAAoBoB,KAApB,SAA6BC,IAA7B,cAA4C;AACjDtD,oBADiD;AAEjDI,gBAAQA,OAAOmD,MAAP,CAAc,CAAC,SAAD,EAAYxD,EAAZ,CAAd,CAFyC;AAGjDyD,cAAStD,IAAT,YAAoBC;AAH6B,OAA5C,EAKJ+B,IALI,CAKC,UAACnB,IAAD,EAAU;AACd,eAAKrC,KAAL,CAAWqC,IAAX,GAAkBA,IAAlB;AACA,eAAOA,IAAP;AACD,OARI,CAAP;AASD;;;+BAEU;AACT,UAAI,KAAKrC,KAAL,CAAWqC,IAAX,CAAgBhB,EAApB,EAAwB,OAAO8C,QAAQY,OAAR,CAAgB,KAAK/E,KAAL,CAAWqC,IAA3B,CAAP;;AAExB,aAAO,KAAKgC,QAAL,EAAP;AACD;;;yBAEIS,I,EAAM;AAAA;;AACT,aAAO,KAAKE,QAAL,GACJxB,IADI,CACC;AAAA,eAAS,YAAKD,IAAL,CAAU0B,MAAMC,YAAhB,EAA8B,EAAEJ,UAAF,EAA9B,EAAwC,EAAxC,CAAT;AAAA,OADD,EAEJtB,IAFI,CAEC,gBAAQ;AACZ,eAAKxD,KAAL,CAAWqC,IAAX,CAAgBC,QAAhB;AACA,YAAM6C,YAAYC,KAAKC,IAAL,CAAU,OAAKrF,KAAL,CAAWqC,IAAX,CAAgBC,QAAhB,GAA2B,OAAKX,OAA1C,CAAlB;AACA,YAAI,OAAK3B,KAAL,CAAW0C,WAAX,KAA2ByC,SAA/B,EAA0C;AACxC,iBAAKnF,KAAL,CAAWsC,QAAX,CAAoBgD,IAApB,CAAyB7B,IAAzB;AACD;AACD,eAAOA,IAAP;AACD,OATI,CAAP;AAUD;;;+BAEU;AAAA;;AAAA,UACDpC,EADC,GACmB,IADnB,CACDA,EADC;AAAA,UACGsD,KADH,GACmB,IADnB,CACGA,KADH;AAAA,UACUC,IADV,GACmB,IADnB,CACUA,IADV;;AAET,aAAO,YAAKW,GAAL,aAAmBZ,KAAnB,SAA4BC,IAA5B,cAA2C;AAC9CY,iBAASb,KADqC;AAE9CjD,gBAAQL;AAFsC,OAA3C,EAIJmC,IAJI,CAIC,kBAAU;AACd,YAAI,CAACiC,OAAOC,MAAZ,EAAoB,OAAOvB,QAAQwB,MAAR,kCAAP;AACpB,eAAK3F,KAAL,CAAWqC,IAAX,GAAkBoD,OAAO,CAAP,CAAlB;AACA,eAAOA,OAAO,CAAP,CAAP;AACD,OARI,CAAP;AASD;;;mCAE2C;AAAA;;AAAA,UAA/BG,IAA+B,uEAAxB,KAAK5F,KAAL,CAAW0C,WAAa;;AAC1C,aAAO,KAAKsC,QAAL,GACJxB,IADI,CACC;AAAA,eAAS,YAAK+B,GAAL,CAASN,MAAMC,YAAf,EAA6B,EAAEU,UAAF,EAAQC,UAAU,OAAKlE,OAAvB,EAA7B,EAA+D,EAA/D,CAAT;AAAA,OADD,EAEJ6B,IAFI,CAEC,UAAClB,QAAD,EAAc;AAClB,eAAKtC,KAAL,CAAWsC,QAAX,GAAsBA,QAAtB;AACA,eAAOA,QAAP;AACD,OALI,CAAP;AAMD;;;mCAEc;AAAA;;AACb,UAAI,CAAC,KAAKP,WAAV,EAAuB;AACrB,aAAK+D,MAAL;AACA,eAAO3B,QAAQY,OAAR,CAAgB,EAAhB,CAAP;AACD;;AAED,aAAO,YAAKQ,GAAL,CAAS,OAAT,EACJ/B,IADI,CACC,UAAC3B,IAAD,EAAU;AACd,eAAK7B,KAAL,CAAW6B,IAAX,GAAkBA,IAAlB;AACAxB,qBAAaG,OAAb,yBAAkCwB,KAAKd,SAAL,CAAeW,IAAf,CAAlC;AACA,eAAOA,IAAP;AACD,OALI,CAAP;AAMD;;;oCAEe;AAAA;;AACd,UAAI,CAAC,KAAKE,WAAV,EAAuB;AACrB,aAAK/B,KAAL,CAAWwC,SAAX,GAAuB,EAAvB;AACA,eAAO2B,QAAQY,OAAR,CAAgB,EAAhB,CAAP;AACD;;AAED,aAAO,KAAKC,QAAL,GACJxB,IADI,CACC,UAACyB,KAAD,EAAW;AACf,YAAI,CAACA,MAAMzC,SAAN,CAAgBuD,WAArB,EAAkC,OAAO,EAAP;AAClC,eAAO,YAAKR,GAAL,CAASN,MAAMzC,SAAN,CAAgBwD,GAAzB,EAA8B,EAA9B,EAAkC,EAAlC,CAAP;AACD,OAJI,EAKJxC,IALI,CAKC,UAAChB,SAAD,EAAe;AACnB,gBAAKxC,KAAL,CAAWwC,SAAX,GAAuBA,SAAvB;AACA,eAAOA,SAAP;AACD,OARI,CAAP;AASD;;;2CAEsB;AAAA;;AACrB,UAAI,CAAC,KAAKT,WAAV,EAAuB;AACrB,aAAK/B,KAAL,CAAWyC,gBAAX,GAA8B,EAA9B;AACA,eAAO0B,QAAQY,OAAR,CAAgB,EAAhB,CAAP;AACD;;AAED,UAAMzC,WAAW,KAAKtC,KAAL,CAAWsC,QAA5B;AACA,UAAM2D,kBAAkB,EAAxB;;AAEA,aAAO9B,QAAQC,GAAR,CAAY9B,SAAS4D,GAAT,CAAa,UAACC,OAAD,EAAa;AAC3C,YAAI,CAACA,QAAQ3D,SAAR,CAAkBuD,WAAvB,EAAoC,OAAO,EAAP;;AADO,YAGnCpB,KAHmC,WAGnCA,KAHmC;AAAA,YAG5BC,IAH4B,WAG5BA,IAH4B;;AAI3C,eAAO,YAAKW,GAAL,aAAmBZ,KAAnB,SAA4BC,IAA5B,yBAAoDuB,QAAQ9E,EAA5D,iBAA4E,EAA5E,CAAP;AACD,OALkB,CAAZ,EAMJmC,IANI,CAMC,0BAAkB;AACtBlB,iBAAS4B,OAAT,CAAiB,UAACiC,OAAD,EAAUC,KAAV,EAAoB;AACnCH,0BAAgBE,QAAQ9E,EAAxB,IAA8BgF,eAAeD,KAAf,CAA9B;AACD,SAFD;AAGA,gBAAKpG,KAAL,CAAWyC,gBAAX,GAA8BwD,eAA9B;;AAEA,eAAOA,eAAP;AACD,OAbI,CAAP;AAcD;;;4BAEO;AACNrF,aAAOC,QAAP,CAAgBC,IAAhB,GAAuB,KAAKwF,SAA5B;AACD;;;6BAEQ;AACPjG,mBAAa8B,UAAb;AACA9B,mBAAa8B,UAAb;AACA,WAAKnC,KAAL,CAAW6B,IAAX,GAAkB,EAAlB;AACD;;;yBAEI+D,I,EAAM;AACT,WAAK5F,KAAL,CAAW0C,WAAX,GAAyBkD,IAAzB;AACA,WAAK5F,KAAL,CAAWsC,QAAX,GAAsBC,SAAtB;AACA,aAAO,KAAKwB,YAAL,CAAkB6B,IAAlB,CAAP;AACD;;;2BAEM;AAAA;;AACL,UAAI,CAAC,KAAK7D,WAAV,EAAuB;AACrB8B,cAAM,eAAN;AACA,eAAOM,QAAQwB,MAAR,EAAP;AACD;;AAJI,UAMGhB,KANH,GAMmB,IANnB,CAMGA,KANH;AAAA,UAMUC,IANV,GAMmB,IANnB,CAMUA,IANV;;;AAQL,aAAO,YAAKrB,IAAL,aAAoBoB,KAApB,SAA6BC,IAA7B,gBAA4C,KAAK5E,KAAL,CAAWqC,IAAX,CAAgBkE,MAA5D,iBAAgF;AACrFC,iBAAS;AAD4E,OAAhF,EAGJhD,IAHI,CAGC,oBAAY;AAChB,gBAAKxD,KAAL,CAAWwC,SAAX,CAAqB8C,IAArB,CAA0BmB,QAA1B;AACA,gBAAKzG,KAAL,CAAWqC,IAAX,CAAgBG,SAAhB,CAA0BkE,KAA1B;AACD,OANI,CAAP;AAOD;;;6BAEQ;AAAA;;AACP,UAAI,CAAC,KAAK3E,WAAV,EAAuB,OAAOoC,QAAQwB,MAAR,EAAP;;AADhB,mBAIqB,KAAK3F,KAJ1B;AAAA,UAIC6B,IAJD,UAICA,IAJD;AAAA,UAIOW,SAJP,UAIOA,SAJP;;AAKP,UAAM4D,QAAQ5D,UAAUmE,SAAV,CAAoB;AAAA,eAAYF,SAAS5E,IAAT,CAAc+E,KAAd,KAAwB/E,KAAK+E,KAAzC;AAAA,OAApB,CAAd;AACA,aAAO,YAAKC,MAAL,iBAA0BrE,UAAU4D,KAAV,EAAiB/E,EAA3C,EACJmC,IADI,CACC,YAAM;AACVhB,kBAAUsE,MAAV,CAAiBV,KAAjB,EAAwB,CAAxB;AACA,gBAAKpG,KAAL,CAAWqC,IAAX,CAAgBG,SAAhB,CAA0BkE,KAA1B;AACD,OAJI,CAAP;AAKD;;;2BACM;AAAA;;AACL,UAAI,CAAC,KAAK3E,WAAV,EAAuB;AACrB8B,cAAM,sBAAN;AACA,eAAOM,QAAQwB,MAAR,EAAP;AACD;AAJI,UAKGhB,KALH,GAKsC,IALtC,CAKGA,KALH;AAAA,UAKUC,IALV,GAKsC,IALtC,CAKUA,IALV;AAAA,UAKgBtD,KALhB,GAKsC,IALtC,CAKgBA,KALhB;AAAA,UAKuBG,IALvB,GAKsC,IALtC,CAKuBA,IALvB;AAAA,UAK6BD,IAL7B,GAKsC,IALtC,CAK6BA,IAL7B;;AAML,aAAO,YAAKuF,KAAL,aAAqBpC,KAArB,SAA8BC,IAA9B,gBAA6C,KAAK5E,KAAL,CAAWqC,IAAX,CAAgBkE,MAA7D,EAAuE;AAC5EjF,oBAD4E;AAE5EwD,cAAStD,IAAT,YAAoBC;AAFwD,OAAvE,EAGJ+B,IAHI,CAGC,UAACnB,IAAD,EAAU;AAChBwB,cAAM,qBAAN;AACA,gBAAK7D,KAAL,CAAWqC,IAAX,GAAkBA,IAAlB;AACA,eAAOA,IAAP;AACD,OAPM,CAAP;AAQD;;;iCACY2E,S,EAAW;AAAA;;AACtB,UAAI,CAAC,KAAKjF,WAAV,EAAuB;AACrB8B,cAAM,eAAN;AACA,eAAOM,QAAQwB,MAAR,EAAP;AACD;;AAJqB,UAMdhB,KANc,GAME,IANF,CAMdA,KANc;AAAA,UAMPC,IANO,GAME,IANF,CAMPA,IANO;;AAOtB,UAAMuB,UAAU,KAAKnG,KAAL,CAAWsC,QAAX,CAAoB2E,IAApB,CAAyB;AAAA,eAAWd,QAAQ9E,EAAR,KAAe2F,SAA1B;AAAA,OAAzB,CAAhB;;AAEA,aAAO,YAAKzD,IAAL,aAAoBoB,KAApB,SAA6BC,IAA7B,yBAAqDoC,SAArD,iBAA4E;AACjFR,iBAAS;AADwE,OAA5E,EAGJhD,IAHI,CAGC,oBAAY;AAChB,gBAAKxD,KAAL,CAAWyC,gBAAX,CAA4BuE,SAA5B,EAAuC1B,IAAvC,CAA4CmB,QAA5C;AACAN,gBAAQ3D,SAAR,CAAkBkE,KAAlB;AACD,OANI,CAAP;AAOD;;;mCAEcM,S,EAAW;AACxB,UAAI,CAAC,KAAKjF,WAAV,EAAuB,OAAOoC,QAAQwB,MAAR,EAAP;;AAEvB,UAAMnD,YAAY,KAAKxC,KAAL,CAAWyC,gBAAX,CAA4BuE,SAA5B,CAAlB;AACA,UAAMb,UAAU,KAAKnG,KAAL,CAAWsC,QAAX,CAAoB2E,IAApB,CAAyB;AAAA,eAAWd,QAAQ9E,EAAR,KAAe2F,SAA1B;AAAA,OAAzB,CAAhB;AAJwB,UAKhBnF,IALgB,GAKP,KAAK7B,KALE,CAKhB6B,IALgB;;AAMxB,UAAMuE,QAAQ5D,UAAUmE,SAAV,CAAoB;AAAA,eAAYF,SAAS5E,IAAT,CAAc+E,KAAd,KAAwB/E,KAAK+E,KAAzC;AAAA,OAApB,CAAd;;AAEA,aAAO,YAAKC,MAAL,iBAA0BrE,UAAU4D,KAAV,EAAiB/E,EAA3C,EACJmC,IADI,CACC,YAAM;AACVhB,kBAAUsE,MAAV,CAAiBV,KAAjB,EAAwB,CAAxB;AACAD,gBAAQ3D,SAAR,CAAkBkE,KAAlB;AACD,OAJI,CAAP;AAKD;;;;;;AAGHQ,OAAOC,OAAP,GAAiB/G,OAAjB","file":"gitment.js","sourcesContent":["import { autorun, observable } from 'mobx'\n\nimport { LS_ACCESS_TOKEN_KEY, LS_USER_KEY, NOT_INITIALIZED_ERROR } from './constants'\nimport { getTargetContainer, http, Query } from './utils'\nimport defaultTheme from './theme/default'\n\nconst scope = 'public_repo'\n\nfunction extendRenderer(instance, renderer) {\n  instance[renderer] = (container) => {\n    const targetContainer = getTargetContainer(container)\n    const render = instance.theme[renderer] || instance.defaultTheme[renderer]\n\n    autorun(() => {\n      const e = render(instance.state, instance)\n      if (targetContainer.firstChild) {\n        targetContainer.replaceChild(e, targetContainer.firstChild)\n      } else {\n        targetContainer.appendChild(e)\n      }\n    })\n\n    return targetContainer\n  }\n}\n\nclass Gitment {\n  get accessToken() {\n    return localStorage.getItem(LS_ACCESS_TOKEN_KEY)\n  }\n  set accessToken(token) {\n    localStorage.setItem(LS_ACCESS_TOKEN_KEY, token)\n  }\n\n  get loginLink() {\n    const oauthUri = 'https://github.com/login/oauth/authorize'\n    const redirect_uri = this.oauth.redirect_uri || window.location.href\n\n    const oauthParams = Object.assign({\n      scope,\n      redirect_uri,\n    }, this.oauth)\n\n    return `${oauthUri}${Query.stringify(oauthParams)}`\n  }\n\n  constructor(options = {}) {\n    this.defaultTheme = defaultTheme\n    this.useTheme(defaultTheme)\n\n    Object.assign(this, {\n      id: window.location.href,\n      title: window.document.title,\n      link: window.location.href,\n      desc: '',\n      labels: [],\n      theme: defaultTheme,\n      oauth: {},\n      perPage: 20,\n      maxCommentHeight: 250,\n    }, options)\n\n    this.useTheme(this.theme)\n\n    const user = {}\n    try {\n      const userInfo = localStorage.getItem(LS_USER_KEY)\n      if (this.accessToken && userInfo) {\n        Object.assign(user, JSON.parse(userInfo), {\n          fromCache: true,\n        })\n      }\n    } catch (e) {\n      localStorage.removeItem(LS_USER_KEY)\n    }\n\n    this.state = observable({\n      user,\n      error: null,\n      meta: {},\n      comments: undefined,\n      reactions: [],\n      commentReactions: {},\n      currentPage: 1,\n    })\n\n    const query = Query.parse()\n    if (query.code) {\n      const { client_id, client_secret } = this.oauth\n      const code = query.code\n      delete query.code\n      const search = Query.stringify(query)\n      const replacedUrl = `${window.location.origin}${window.location.pathname}${search}${window.location.hash}`\n      history.replaceState({}, '', replacedUrl)\n\n      Object.assign(this, {\n        id: replacedUrl,\n        link: replacedUrl,\n      }, options)\n\n      this.state.user.isLoggingIn = true\n      http.post('https://gh-oauth.imsun.net', {\n          code,\n          client_id,\n          client_secret,\n        }, '')\n        .then(data => {\n          this.accessToken = data.access_token\n          this.update()\n        })\n        .catch(e => {\n          this.state.user.isLoggingIn = false\n          alert(e)\n        })\n    } else {\n      this.update()\n    }\n  }\n\n  init() {\n    return this.createIssue()\n      .then(() => this.loadComments())\n      .then(comments => {\n        this.state.error = null\n        return comments\n      })\n  }\n\n  useTheme(theme = {}) {\n    this.theme = theme\n\n    const renderers = Object.keys(this.theme)\n    renderers.forEach(renderer => extendRenderer(this, renderer))\n  }\n\n  update() {\n    return Promise.all([this.loadMeta(), this.loadUserInfo()])\n      .then(() => Promise.all([\n        this.loadComments().then(() => this.loadCommentReactions()),\n        this.loadReactions(),\n      ]))\n      .catch(e => this.state.error = e)\n  }\n\n  markdown(text) {\n    return http.post('/markdown', {\n      text,\n      mode: 'gfm',\n    })\n  }\n\n  createIssue() {\n    const { id, owner, repo, title, link, desc, labels } = this\n\n    return http.post(`/repos/${owner}/${repo}/issues`, {\n      title,\n      labels: labels.concat(['gitment', id]),\n      body: `${link}\\n\\n${desc}`,\n    })\n      .then((meta) => {\n        this.state.meta = meta\n        return meta\n      })\n  }\n\n  getIssue() {\n    if (this.state.meta.id) return Promise.resolve(this.state.meta)\n\n    return this.loadMeta()\n  }\n\n  post(body) {\n    return this.getIssue()\n      .then(issue => http.post(issue.comments_url, { body }, ''))\n      .then(data => {\n        this.state.meta.comments++\n        const pageCount = Math.ceil(this.state.meta.comments / this.perPage)\n        if (this.state.currentPage === pageCount) {\n          this.state.comments.push(data)\n        }\n        return data\n      })\n  }\n\n  loadMeta() {\n    const { id, owner, repo } = this\n    return http.get(`/repos/${owner}/${repo}/issues`, {\n        creator: owner,\n        labels: id,\n      })\n      .then(issues => {\n        if (!issues.length) return Promise.reject(NOT_INITIALIZED_ERROR)\n        this.state.meta = issues[0]\n        return issues[0]\n      })\n  }\n\n  loadComments(page = this.state.currentPage) {\n    return this.getIssue()\n      .then(issue => http.get(issue.comments_url, { page, per_page: this.perPage }, ''))\n      .then((comments) => {\n        this.state.comments = comments\n        return comments\n      })\n  }\n\n  loadUserInfo() {\n    if (!this.accessToken) {\n      this.logout()\n      return Promise.resolve({})\n    }\n\n    return http.get('/user')\n      .then((user) => {\n        this.state.user = user\n        localStorage.setItem(LS_USER_KEY, JSON.stringify(user))\n        return user\n      })\n  }\n\n  loadReactions() {\n    if (!this.accessToken) {\n      this.state.reactions = []\n      return Promise.resolve([])\n    }\n\n    return this.getIssue()\n      .then((issue) => {\n        if (!issue.reactions.total_count) return []\n        return http.get(issue.reactions.url, {}, '')\n      })\n      .then((reactions) => {\n        this.state.reactions = reactions\n        return reactions\n      })\n  }\n\n  loadCommentReactions() {\n    if (!this.accessToken) {\n      this.state.commentReactions = {}\n      return Promise.resolve([])\n    }\n\n    const comments = this.state.comments\n    const comentReactions = {}\n\n    return Promise.all(comments.map((comment) => {\n      if (!comment.reactions.total_count) return []\n\n      const { owner, repo } = this\n      return http.get(`/repos/${owner}/${repo}/issues/comments/${comment.id}/reactions`, {})\n    }))\n      .then(reactionsArray => {\n        comments.forEach((comment, index) => {\n          comentReactions[comment.id] = reactionsArray[index]\n        })\n        this.state.commentReactions = comentReactions\n\n        return comentReactions\n      })\n  }\n\n  login() {\n    window.location.href = this.loginLink\n  }\n\n  logout() {\n    localStorage.removeItem(LS_ACCESS_TOKEN_KEY)\n    localStorage.removeItem(LS_USER_KEY)\n    this.state.user = {}\n  }\n\n  goto(page) {\n    this.state.currentPage = page\n    this.state.comments = undefined\n    return this.loadComments(page)\n  }\n\n  like() {\n    if (!this.accessToken) {\n      alert('Login to Like')\n      return Promise.reject()\n    }\n\n    const { owner, repo } = this\n\n    return http.post(`/repos/${owner}/${repo}/issues/${this.state.meta.number}/reactions`, {\n      content: 'heart',\n    })\n      .then(reaction => {\n        this.state.reactions.push(reaction)\n        this.state.meta.reactions.heart++\n      })\n  }\n\n  unlike() {\n    if (!this.accessToken) return Promise.reject()\n\n\n    const { user, reactions } = this.state\n    const index = reactions.findIndex(reaction => reaction.user.login === user.login)\n    return http.delete(`/reactions/${reactions[index].id}`)\n      .then(() => {\n        reactions.splice(index, 1)\n        this.state.meta.reactions.heart--\n      })\n  }\n  sync() {\n    if (!this.accessToken) {\n      alert('Login to Synchronize')\n      return Promise.reject()\n    }\n    const { owner, repo, title, desc, link } = this\n    return http.patch(`/repos/${owner}/${repo}/issues/${this.state.meta.number}`, {\n      title,\n      body: `${link}\\n\\n${desc}`\n    }).then((meta) => {\n      alert('Synchronize success')\n      this.state.meta = meta\n      return meta\n    })\n  }\n  likeAComment(commentId) {\n    if (!this.accessToken) {\n      alert('Login to Like')\n      return Promise.reject()\n    }\n\n    const { owner, repo } = this\n    const comment = this.state.comments.find(comment => comment.id === commentId)\n\n    return http.post(`/repos/${owner}/${repo}/issues/comments/${commentId}/reactions`, {\n      content: 'heart',\n    })\n      .then(reaction => {\n        this.state.commentReactions[commentId].push(reaction)\n        comment.reactions.heart++\n      })\n  }\n\n  unlikeAComment(commentId) {\n    if (!this.accessToken) return Promise.reject()\n\n    const reactions = this.state.commentReactions[commentId]\n    const comment = this.state.comments.find(comment => comment.id === commentId)\n    const { user } = this.state\n    const index = reactions.findIndex(reaction => reaction.user.login === user.login)\n\n    return http.delete(`/reactions/${reactions[index].id}`)\n      .then(() => {\n        reactions.splice(index, 1)\n        comment.reactions.heart--\n      })\n  }\n}\n\nmodule.exports = Gitment\n"]}